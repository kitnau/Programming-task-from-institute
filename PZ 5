#include <iostream>
#include <string>
using namespace std;



string check_bracket(char inner_symbol, int &flag1, int &flag2, int &flag3, int &n, int *massiv, int &leng){
    n++;
    if (inner_symbol ==  '('){
        flag1++;
        massiv[n] = 1;
    } 
    else if (inner_symbol ==  '[') {
        flag2++;
        massiv[n] = 2;
    }
    else if (inner_symbol ==  '{') { 
        flag3++;
        massiv[n] = 3;
    }
    else if (inner_symbol ==  ')') {
        if (flag1 == 0) return "NO";
        flag1 = flag1-1;
        for (int g = (leng)-1; g > -1; g--){
            if (massiv[g] == 2 || massiv[g] == 3){
                return "NO";
            }
            else {
                if (massiv[g] == 1){
                    massiv[g] = -1;
                    return "YES";
                }
            }
        }
    }
    else if (inner_symbol ==  ']') {
        if (flag2 == 0) return "NO";
        flag2 = flag2-1;
        for (int g = (leng) -1; g > -1; g--){
            
            if (massiv[g] == 1 || massiv[g] == 3){
                return "NO";
            }
            else {
                if (massiv[g] == 2){
                    massiv[g] = -1;
                    return "YES";
                }
            }
        }
    }
    else if (inner_symbol ==  '}') {
        if (flag3 == 0) return "NO";
        flag3 = flag3-1;
        for (int g = (leng)-1; g > -1; g--){
            if (massiv[g] == 1 || massiv[g] == 2){
                return "NO";
            }
            else {
                if (massiv[g] == 3){
                    massiv[g] = -1;
                    return "YES";
                }
            }
        }
    
    }
    return "YES";
}



int main()
{
    string stroka;
    int flag1 = 0; // отвечает за проверку скобок ()
    int flag2 = 0; // отвечает за проверку скобок []
    int flag3 = 0; // отвечает за проверку скобок {}
    int n = -1;
    string flag_error = "YES";
    cin >> stroka;
    int leng = stroka.size();
    int massiv[leng];

    
    for (int i = 0; i < leng; i++) {
        if (check_bracket (stroka[i], flag1, flag2, flag3, n, massiv, leng) == "NO") {
            flag_error = "NO";
            break;
        }
        }
    if ((flag1 or flag2 or flag3) != 0 ) flag_error = "NO";
    cout << flag_error;
    return 0;
}
//[(()])
